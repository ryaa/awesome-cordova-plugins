import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var SpinnerDialog = /** @class */ (function (_super) {
    __extends(SpinnerDialog, _super);
    function SpinnerDialog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpinnerDialog.prototype.show = function (title, message, cancelCallback, iOSOptions) { return cordova(this, "show", { "sync": true }, arguments); };
    SpinnerDialog.prototype.hide = function () { return cordova(this, "hide", { "sync": true }, arguments); };
    SpinnerDialog.pluginName = "SpinnerDialog";
    SpinnerDialog.plugin = "cordova-plugin-native-spinner";
    SpinnerDialog.pluginRef = "SpinnerDialog";
    SpinnerDialog.repo = "https://github.com/greybax/cordova-plugin-native-spinner";
    SpinnerDialog.platforms = ["Android", "iOS", "Windows Phone 8", "Windows"];
    SpinnerDialog.decorators = [
        { type: Injectable }
    ];
    return SpinnerDialog;
}(AwesomeCordovaNativePlugin));
export { SpinnerDialog };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvc3Bpbm5lci1kaWFsb2cvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sdUNBQStDLE1BQU0sK0JBQStCLENBQUM7O0lBcUR6RCxpQ0FBMEI7Ozs7SUFZM0QsNEJBQUksYUFBQyxLQUFjLEVBQUUsT0FBZ0IsRUFBRSxjQUFvQixFQUFFLFVBQW9DO0lBUWpHLDRCQUFJOzs7Ozs7O2dCQXJCTCxVQUFVOzt3QkFyRFg7RUFzRG1DLDBCQUEwQjtTQUFoRCxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBTcGlubmVyRGlhbG9nSU9TT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBPcGFjaXR5IG9mIHRoZSBvdmVybGF5LCBiZXR3ZWVuIDAgKHRyYW5zcGFyZW50KSBhbmQgMSAob3BhcXVlKS4gRGVmYXVsdDogMC4zNVxuICAgKi9cbiAgb3ZlcmxheU9wYWNpdHk/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFJlZCBjb21wb25lbnQgb2YgdGhlIHRleHQgY29sb3IsIGJldHdlZW4gMCBhbmQgMS4gRGVmYXVsdDogMVxuICAgKi9cbiAgdGV4dENvbG9yUmVkPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBHcmVlbiBjb21wb25lbnQgb2YgdGhlIHRleHQgY29sb3IsIGJldHdlZW4gMCBhbmQgMS4gRGVmYXVsdDogMVxuICAgKi9cbiAgdGV4dENvbG9yR3JlZW4/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEJsdWUgY29tcG9uZW50IG9mIHRoZSB0ZXh0IGNvbG9yLCBiZXR3ZWVuIDAgYW5kIDEuIERlZmF1bHQ6IDFcbiAgICovXG4gIHRleHRDb2xvckJsdWU/OiBudW1iZXI7XG59XG5cbi8qKlxuICogQG5hbWUgU3Bpbm5lciBEaWFsb2dcbiAqIEBkZXNjcmlwdGlvblxuICogQ29yZG92YSBwbHVnaW4gZm9yIHNob3dpbmcgYSBuYXRpdmUgc3Bpbm5lciBiYXNlZCBvbiBQYWxkb20vU3Bpbm5lckRpYWxvZy5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogYGNvcmRvdmEtcGx1Z2luLW5hdGl2ZS1zcGlubmVyYC4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW1NwaW5uZXIgRGlhbG9nIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vZ3JleWJheC9jb3Jkb3ZhLXBsdWdpbi1uYXRpdmUtc3Bpbm5lcikuXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNwaW5uZXJEaWFsb2cgfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvc3Bpbm5lci1kaWFsb2cvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHNwaW5uZXJEaWFsb2c6IFNwaW5uZXJEaWFsb2cpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuc3Bpbm5lckRpYWxvZy5zaG93KCk7XG4gKlxuICogdGhpcy5zcGlubmVyRGlhbG9nLmhpZGUoKTtcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIFNwaW5uZXJEaWFsb2dJT1NPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnU3Bpbm5lckRpYWxvZycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLW5hdGl2ZS1zcGlubmVyJyxcbiAgcGx1Z2luUmVmOiAnU3Bpbm5lckRpYWxvZycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZ3JleWJheC9jb3Jkb3ZhLXBsdWdpbi1uYXRpdmUtc3Bpbm5lcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzIFBob25lIDgnLCAnV2luZG93cyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTcGlubmVyRGlhbG9nIGV4dGVuZHMgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogU2hvd3MgdGhlIHNwaW5uZXIgZGlhbG9nXG4gICAqXG4gICAqIEBwYXJhbSB0aXRsZSB7c3RyaW5nfSBTcGlubmVyIHRpdGxlIChzaG93cyBvbiBBbmRyb2lkIG9ubHkpXG4gICAqIEBwYXJhbSBtZXNzYWdlIHtzdHJpbmd9IFNwaW5uZXIgbWVzc2FnZVxuICAgKiBAcGFyYW0gY2FuY2VsQ2FsbGJhY2sge2Jvb2xlYW58ZnVuY3Rpb259IFNldCB0byB0cnVlIHRvIHNldCBzcGlubmVyIG5vdCBjYW5jZWxhYmxlLiBPciBwcm92aWRlIGEgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIHRoZSB1c2VyIGNhbmNlbHMgdGhlIHNwaW5uZXIuXG4gICAqIEBwYXJhbSBpT1NPcHRpb25zIHtvYmplY3R9IE9wdGlvbnMgZm9yIGlPUyBvbmx5XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3luYzogdHJ1ZSxcbiAgfSlcbiAgc2hvdyh0aXRsZT86IHN0cmluZywgbWVzc2FnZT86IHN0cmluZywgY2FuY2VsQ2FsbGJhY2s/OiBhbnksIGlPU09wdGlvbnM/OiBTcGlubmVyRGlhbG9nSU9TT3B0aW9ucyk6IHZvaWQge31cblxuICAvKipcbiAgICogSGlkZXMgdGhlIHNwaW5uZXIgZGlhbG9nIGlmIHZpc2libGVcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBzeW5jOiB0cnVlLFxuICB9KVxuICBoaWRlKCk6IHZvaWQge31cbn1cbiJdfQ==