import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var IamportCordova = /** @class */ (function (_super) {
    __extends(IamportCordova, _super);
    function IamportCordova() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IamportCordova.prototype.payment = function (paymentObject) { return cordova(this, "payment", {}, arguments); };
    IamportCordova.prototype.certification = function (certificationObject) { return cordova(this, "certification", {}, arguments); };
    IamportCordova.pluginName = "IamportCordova";
    IamportCordova.plugin = "iamport-cordova";
    IamportCordova.pluginRef = "cordova.plugins.IamportCordova";
    IamportCordova.repo = "https://github.com/iamport/iamport-cordova";
    IamportCordova.platforms = ["ios", "android"];
    IamportCordova.decorators = [
        { type: Injectable }
    ];
    return IamportCordova;
}(AwesomeCordovaNativePlugin));
export { IamportCordova };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvaWFtcG9ydC1jb3Jkb3ZhL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQXlGeEQsa0NBQTBCOzs7O0lBUTVELGdDQUFPLGFBQUMsYUFBNEI7SUFXcEMsc0NBQWEsYUFBQyxtQkFBd0M7Ozs7Ozs7Z0JBcEJ2RCxVQUFVOzt5QkF6Rlg7RUEwRm9DLDBCQUEwQjtTQUFqRCxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGx1Z2luLCBDb3Jkb3ZhLCBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcblxuZGVjbGFyZSBjb25zdCBjb3Jkb3ZhOiBDb3Jkb3ZhICYgeyBwbHVnaW5zOiBhbnkgfTtcblxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50T2JqZWN0IHtcbiAgdGl0bGU/OiBUaXRsZURhdGE7IC8vIHdlYnZpZXcgdGl0bGUgZGF0YVxuICB1c2VyQ29kZTogc3RyaW5nOyAvLyB1c2VyIGlkZW50aWZpY2F0aW9uIGNvZGVcbiAgZGF0YTogUGF5bWVudERhdGE7IC8vIHBheW1lbnQgZGF0YVxuICBjYWxsYmFjazogYW55OyAvLyBjYWxsYmFjayBmdW5jdGlvbiBhZnRlciBwYXltZW50XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2VydGlmaWNhdGlvbk9iamVjdCB7XG4gIHRpdGxlPzogVGl0bGVEYXRhOyAvLyB3ZWJ2aWV3IHRpdGxlIGRhdGFcbiAgdXNlckNvZGU6IHN0cmluZzsgLy8gdXNlciBpZGVudGlmaWNhdGlvbiBjb2RlXG4gIGRhdGE6IENlcnRpZmljYXRpb25EYXRhOyAvLyBjZXJ0aWZpY2F0aW9uIGRhdGFcbiAgY2FsbGJhY2s6IGFueTsgLy8gY2FsbGJhY2sgZnVuY3Rpb24gYWZ0ZXIgY2VydGlmaWNhdGlvblxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRpdGxlRGF0YSB7XG4gIG5hbWU/OiBzdHJpbmc7IC8vIHdlYnZpZXcgdGl0bGUgbmFtZVxuICBjb2xvcj86IHN0cmluZzsgLy8gd2VidmlldyB0aXRsZSBiYWNrZ3JvdW5kIGNvbG9yXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGF5bWVudERhdGEge1xuICBwZz86IHN0cmluZzsgLy8gcGF5bWVudCBnYXRld2F5IHR5cGVcbiAgcGF5X21ldGhvZD86IHN0cmluZzsgLy8gcGF5bWVudCBtZXRob2RcbiAgbmFtZTogc3RyaW5nOyAvLyBuYW1lIG9mIG9yZGVyXG4gIG1lcmNoYW50X3VpZD86IHN0cmluZzsgLy8gdW5pcXVlIG1lcmNoYW50IGlkXG4gIGFtb3VudDogc3RyaW5nOyAvLyBwYXltZW50IGFtb3VudFxuICBidXllcl9uYW1lPzogc3RyaW5nOyAvLyBidXllciBuYW1lXG4gIGJ1eWVyX3RlbD86IHN0cmluZzsgLy8gYnV5ZXIgY29udGFjdFxuICBidXllcl9lbWFpbD86IHN0cmluZzsgLy8gYnV5ZXIgZW1haWwgYWRkcmVzc1xuICBidXllcl9hZGRyPzogc3RyaW5nOyAvLyBidXllciBhZGRyZXNzXG4gIGJ1eWVyX3Bvc3Rjb2RlPzogc3RyaW5nOyAvLyBidXllciBwb3N0Y29kZVxuICBhcHBfc2NoZW1lOiBzdHJpbmc7IC8vIGN1c3RvbSBhcHAgdXJsIHNjaGVtZVxuICBjdXN0b21fZGF0YT86IGFueTsgLy8gY3VzdG9tIGRhdGFcbiAgbm90aWNlX3VybD86IHN0cmluZzsgLy8gbm90aWZpY2F0aW9uIHVybFxuICBlc2Nyb3c/OiBib29sZWFuOyAvLyB3aGV0aGVyIHRoZSB0eXBlIG9mIHRoaXMgb3JkZXIgaXMgZXNjcm93XG4gIGRpZ2l0YWw/OiBib29sZWFuOyAvLyB3aGV0aGVyIHRoaXMgb3JkZXIgaXMgZm9yIHJlYWwgcHJvZHVjdHMgb3IgY29udGVudHNcbiAgZGlzcGxheT86IHtcbiAgICBjYXJkX3F1b3RhPzogbnVtYmVyW107IC8vIGNyZWRpdCBjYXJkIGluc3RhbGxtZW50IHNldHRpbmcgdmFsdWVcbiAgfTtcbiAgY3VycmVuY3k/OiBzdHJpbmc7IC8vIHBheW1lbnQgY3VycmVuY3lcbiAgY3VzdG9tZXJfdWlkPzogc3RyaW5nOyAvLyB1bmlxdWUgY3VzdG9tZXIgaWQgZm9yIHN1YnNjcmlwdGlvbiBwYXltZW50c1xuICB0YXhfZnJlZT86IHN0cmluZzsgLy8gdGF4IGFtb3VudFxuICBsYW5ndWFnZT86IHN0cmluZzsgLy8gbGFuZ3VhZ2UgdHlwZVxuICB2YmFua19kdWU/OiBzdHJpbmc7IC8vIHZiYW5rIGR1ZSBkYXRlXG4gIGJpel9udW0/OiBzdHJpbmc7IC8vIGJ1c2luZXNzIG51bWJlclxufVxuXG5leHBvcnQgaW50ZXJmYWNlIENlcnRpZmljYXRpb25EYXRhIHtcbiAgY29tcGFueT86IHN0cmluZzsgLy8gY29tcGFueSBuYW1lXG4gIHBob25lPzogc3RyaW5nOyAvLyBjZWxsIHBob25lIG51bWJlclxuICBuYW1lPzogc3RyaW5nOyAvLyBuYW1lXG4gIGNhcnJpZXI/OiBzdHJpbmc7IC8vIGNhcnJpZXIgY29kZVxuICBiaXJ0aD86IHN0cmluZzsgLy8gYmlydGggZGF0ZVxuICBtZXJjaGFudF91aWQ/OiBzdHJpbmc7IC8vIHVuaXF1ZSBtZXJjaGFudCBpZFxuICBtaW5fYWdlPzogc3RyaW5nOyAvLyBtaW5pbXVtIGFnZSB0byBhbGxvdyBjZXJ0aWZpY2F0aW9uXG4gIHBvcHVwPzogYm9vbGVhbjsgLy8gd2hldGhlciB0aGUgd2VidmlldyBpcyBwb3B1cFxufVxuXG4vKipcbiAqIEBuYW1lIElhbXBvcnQgQ29yZG92YVxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBkb2VzIHNvbWV0aGluZ1xuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBJYW1wb3J0Q29yZG92YSB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9pYW1wb3J0LWNvcmRvdmEvbmd4JztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBpYW1wb3J0Q29yZG92YTogSWFtcG9ydENvcmRvdmEpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLmlhbXBvcnRDb3Jkb3ZhLmZ1bmN0aW9uTmFtZSgnSGVsbG8nLCAxMjMpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnSWFtcG9ydENvcmRvdmEnLFxuICBwbHVnaW46ICdpYW1wb3J0LWNvcmRvdmEnLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuSWFtcG9ydENvcmRvdmEnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2lhbXBvcnQvaWFtcG9ydC1jb3Jkb3ZhJyxcbiAgcGxhdGZvcm1zOiBbJ2lvcycsICdhbmRyb2lkJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIElhbXBvcnRDb3Jkb3ZhIGV4dGVuZHMgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBpcyB0byBsb2FkIGEgd2VidmlldyBvZiBhIHBheW1lbnQgZ2F0ZXdheSB0byBwYXkgZm9yIHNvbWV0aGluZ1xuICAgKlxuICAgKiBAcGFyYW0gcGF5bWVudE9iamVjdCB7UGF5bWVudE9iamVjdH0gUGF5bWVudCBkYXRhIHRvIHNldCB0aGUgcGF5bWVudCB3ZWJ2aWV3XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IEEgY2FsbGJhY2sgZnVuY3Rpb24gb2YgdGhlIHBheW1lbnQgZGF0YSBpcyB0cmlnZ2VyZWQgd2hlbiB0aGUgd2VidmlldyBpcyBjbG9zZWRcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcGF5bWVudChwYXltZW50T2JqZWN0OiBQYXltZW50T2JqZWN0KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm4gY29yZG92YS5wbHVnaW5zLklhbXBvcnRDb3Jkb3ZhLnBheW1lbnQocGF5bWVudE9iamVjdCk7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBpcyB0byBsb2FkIGEgd2VidmlldyBmb3IgaWRlbnRpZmljYXRpb24gd2l0aCBjYXJyaWVyIHR5cGUobGlrZSBWZXJpem9uKSwgbmFtZSBhbmQgcGhvbmUgbnVtYmVyXG4gICAqXG4gICAqIEBwYXJhbSBjZXJ0aWZpY2F0aW9uT2JqZWN0IHtDZXJ0aWZpY2F0aW9uT2JqZWN0fSBDZXJ0aWZpY2F0aW9uIGRhdGEgdG8gc2V0IHRoZSBjZXJ0aWZpY2F0aW9uIHdlYnZpZXdcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gQSBjYWxsYmFjayBmdW5jdGlvbiBvZiB0aGUgY2VydGlmaWNhdGlvbiBkYXRhIGlzIHRyaWdnZXJlZCB3aGVuIHRoZSB3ZWJ2aWV3IGlzIGNsb3NlZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBjZXJ0aWZpY2F0aW9uKGNlcnRpZmljYXRpb25PYmplY3Q6IENlcnRpZmljYXRpb25PYmplY3QpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybiBjb3Jkb3ZhLnBsdWdpbnMuSWFtcG9ydENvcmRvdmEuY2VydGlmaWNhdGlvbihjZXJ0aWZpY2F0aW9uT2JqZWN0KTtcbiAgfVxufVxuIl19