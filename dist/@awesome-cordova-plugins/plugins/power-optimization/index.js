var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var PowerOptimizationOriginal = /** @class */ (function (_super) {
    __extends(PowerOptimizationOriginal, _super);
    function PowerOptimizationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PowerOptimizationOriginal.prototype.IsIgnoringBatteryOptimizations = function () { return cordova(this, "IsIgnoringBatteryOptimizations", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestOptimizations = function () { return cordova(this, "RequestOptimizations", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestOptimizationsMenu = function () { return cordova(this, "RequestOptimizationsMenu", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.IsIgnoringDataSaver = function () { return cordova(this, "IsIgnoringDataSaver", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestDataSaverMenu = function () { return cordova(this, "RequestDataSaverMenu", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.HaveProtectedAppsCheck = function () { return cordova(this, "HaveProtectedAppsCheck", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.ProtectedAppCheck = function () { return cordova(this, "ProtectedAppCheck", { "sync": true }, arguments); };
    PowerOptimizationOriginal.pluginName = "PowerOptimization";
    PowerOptimizationOriginal.plugin = "cordova-plugin-power-optimization";
    PowerOptimizationOriginal.pluginRef = "cordova.plugins.PowerOptimization";
    PowerOptimizationOriginal.repo = "https://github.com/snt1017/cordova-plugin-power-optimization";
    PowerOptimizationOriginal.platforms = ["Android"];
    return PowerOptimizationOriginal;
}(AwesomeCordovaNativePlugin));
var PowerOptimization = new PowerOptimizationOriginal();
export { PowerOptimization };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvcG93ZXItb3B0aW1pemF0aW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQTRCckQscUNBQTBCOzs7O0lBUS9ELDBEQUE4QjtJQVU5QixnREFBb0I7SUFVcEIsb0RBQXdCO0lBVXhCLCtDQUFtQjtJQVVuQixnREFBb0I7SUFVcEIsa0RBQXNCO0lBVXRCLDZDQUFpQjs7Ozs7OzRCQWpHbkI7RUE2QnVDLDBCQUEwQjtTQUFwRCxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xuLyoqXG4gKiBAbmFtZSBQb3dlciBPcHRpbWl6YXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogQW5kcm9pZCBDdXN0b20gUm9tcyBtYWRlIHNvbWV0aW1lcyB5b3VyIGFwcHMgdW5mdW5jdGlvbmFsIGR1ZSB0byBiZWluZyBraWxsZWQgaW4gdGhlIGJhY2tncm91bmQsIG5vdGlmaWNhdGlvbiBtZXNzYWdlcyBkbyBub3QgYXBwZWFyaW5nIG9yIHlvdXIgc2VydmljZXMgYmVpbmcga2lsbGVkIGJ5IGFncmVzc2l2ZSBwb3dlciBzYXZpbmcgbW9kZS5cbiAqIFRoZSBQb3dlciBPcHRpbWl6YXRpb24gcGx1Z2luIGdpdmUgeW91IGFuZHJvaWQgUG93ZXJNYW5hZ2VyIG1ldGhvZHMgd2l0aCBjb3Jkb3ZhLlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBQb3dlck9wdGltaXphdGlvbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9wb3dlci1vcHRpbWl6YXRpb24vbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHBvd2VyT3B0aW1pemF0aW9uOiBQb3dlck9wdGltaXphdGlvbikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5wb3dlck9wdGltaXphdGlvbi5Jc0lnbm9yaW5nQmF0dGVyeU9wdGltaXphdGlvbnMoKVxuICogICAudGhlbihvblN1Y2Nlc3MpXG4gKiAgIC5jYXRjaChvbkVycm9yKTtcbiAqXG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdQb3dlck9wdGltaXphdGlvbicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvbicsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5Qb3dlck9wdGltaXphdGlvbicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb24nLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb3dlck9wdGltaXphdGlvbiBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIENoZWNrIGlmIHRoZSBiYXR0ZXJ5IG9wdGltaXphdGlvbiBpcyBpZ25vcmluZ1xuICAgKiBGb3IgbW9yZSBpbmZvLCBwbGVhc2UgY2hlY2sgaHR0cHM6Ly9naXRodWIuY29tL3NudDEwMTcvY29yZG92YS1wbHVnaW4tcG93ZXItb3B0aW1pemF0aW9uXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgSXNJZ25vcmluZ0JhdHRlcnlPcHRpbWl6YXRpb25zKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8qKlxuICAgKiBSZXF1ZXN0IHBlcm1pc3NvbiB0byBpZ25vcmUgb3B0aW1pemF0aW9uczpcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxuICAgKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIFJlcXVlc3RPcHRpbWl6YXRpb25zKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8qKlxuICAgKiBHbyB0byBiYXR0ZXJ5IG9wdGltaXphdGlvbnMgY29uZmlndXJhdGlvbnMgbWVudTpcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxuICAgKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIFJlcXVlc3RPcHRpbWl6YXRpb25zTWVudSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogQ2hlY2sgaWYgaGF2ZSBhbnkgZGF0YSByZXN0cmljdGlvbnMgaW4gYmFja2dyb3VuZDpcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxuICAgKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIElzSWdub3JpbmdEYXRhU2F2ZXIoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbiAgLyoqXG4gICAqIEdvIHRvIGRhdGEgcmVzdHJpY3Rpb25zIGluIGJhY2tncm91bmQgY29uZmlndXJhdGlvbnMgbWVudTpcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxuICAgKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIFJlcXVlc3REYXRhU2F2ZXJNZW51KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8qKlxuICAgKiBDaGVjayBpZiBoYXZlIGFub3RoZXIgYmF0dGVyeSByZXN0cmljdGlvbiBpcyBwcmVzZW50IGludG8gcGhvbmUgKGxpa2UgaHVhd2VpLCB4aWFvbWksIGV0Yyk6XG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBIYXZlUHJvdGVjdGVkQXBwc0NoZWNrKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8qKlxuICAgKiBHbyB0byBjb25maWd1cmF0aW9ucyBtZW51IGlmIGFub3RoZXIgYmF0dGVyeSByZXN0cmljdGlvbiBpcyBwcmVzZW50IGludG8gcGhvbmUgKGxpa2UgaHVhd2VpLCB4aWFvbWksIGV0YykuIFlvdSBjYW4gc2VuZCB0cnVlIGludG8gcGFyYW1zIGlmIHlvdSB3YW50IHRvIGZvcmNlIHNob3cgdGhlIG1lbnUgKGlzIG9ubHkgc2hvdyB0aGUgZmlzdCB0aW1lIHdpdGhvdXQgcGFyYW1zKTpcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxuICAgKlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIFByb3RlY3RlZEFwcENoZWNrKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=