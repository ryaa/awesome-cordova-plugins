import { __decorate, __extends } from "tslib";
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var AllInOneSDK = /** @class */ (function (_super) {
    __extends(AllInOneSDK, _super);
    function AllInOneSDK() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AllInOneSDK.prototype.startTransaction = function (options) { return cordova(this, "startTransaction", {}, arguments); };
    AllInOneSDK.pluginName = "AllInOneSDK";
    AllInOneSDK.plugin = "cordova-paytm-allinonesdk";
    AllInOneSDK.pluginRef = "AllInOneSDK";
    AllInOneSDK.repo = "https://github.com/paytm/paytm-allinonesdk-ionic-cordova.git";
    AllInOneSDK.platforms = ["Android", "iOS"];
    AllInOneSDK = __decorate([], AllInOneSDK);
    return AllInOneSDK;
}(AwesomeCordovaNativePlugin));
export { AllInOneSDK };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvYWxsLWluLW9uZS1zZGsvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLHVDQU9OLE1BQU0sK0JBQStCLENBQUM7O0lBd0NOLCtCQUEwQjs7OztJQVV6RCxzQ0FBZ0IsYUFBQyxPQUFzRDs7Ozs7O0lBVjVELFdBQVcsa0JBQVgsV0FBVztzQkFoRHhCO0VBZ0RpQywwQkFBMEI7U0FBOUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFBsdWdpbixcbiAgQ29yZG92YSxcbiAgQ29yZG92YVByb3BlcnR5LFxuICBDb3Jkb3ZhSW5zdGFuY2UsXG4gIEluc3RhbmNlUHJvcGVydHksXG4gIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLFxufSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogQG5hbWUgQWxsSW5PbmVTREtcbiAqIEBkZXNjcmlwdGlvblxuICogUGF5dG0gQWxsLWluLU9uZSBTREsgcGx1Z2luIGZvciBDb3Jkb3ZhL0lvbmljIEFwcGxpY2F0aW9uc1xuICogUGF5dG0gQWxsLWluLU9uZSBTREsgcHJvdmlkZXMgYSBzd2lmdCwgc2VjdXJlIGFuZCBzZWFtbGVzcyBwYXltZW50IGV4cGVyaWVuY2UgdG8geW91ciB1c2VycyBieSBpbnZva2luZyB0aGUgUGF5dG0gYXBwIChpZiBpbnN0YWxsZWQgb24geW91ciB1c2Vy4oCZcyBzbWFydHBob25lKSB0byBjb21wbGV0ZSBwYXltZW50IGZvciB5b3VyIG9yZGVyLlxuICogUGF5dG0gQWxsLWluLU9uZSBTREsgZW5hYmxlcyBwYXltZW50IGFjY2VwdGFuY2UgdmlhIFBheXRtIHdhbGxldCwgUGF5dG0gUGF5bWVudHMgQmFuaywgc2F2ZWQgRGViaXQvQ3JlZGl0IGNhcmRzLCBOZXQgQmFua2luZywgQkhJTSBVUEkgYW5kIEVNSSBhcyBhdmFpbGFibGUgaW4geW91ciBjdXN0b21lcuKAmXMgUGF5dG0gYWNjb3VudC4gSWYgUGF5dG0gYXBwIGlzIG5vdCBpbnN0YWxsZWQgb24gYSBjdXN0b21lcidzIGRldmljZSwgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgcHJvY2Vzc2VkIHZpYSB3ZWIgdmlldyB3aXRoaW4gdGhlIEFsbC1pbi1PbmUgU0RLLlxuICogRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgUGF5dG0gQWxsLWluLU9uZSBTREssIHBsZWFzZSB2aXNpdCBodHRwczovL2RldmVsb3Blci5wYXl0bS5jb20vZG9jcy9hbGwtaW4tb25lLXNkay9oeWJyaWQtYXBwcy9jb3Jkb3ZhL1xuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBBbGxJbk9uZVNESyB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9hbGwtaW4tb25lLXNkay9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGFsbEluT25lU0RLOiBBbGxJbk9uZVNESykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogRm9yIGJlbG93IHBhcmFtZXRlcnMgc2VlIFtkb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5wYXl0bS5jb20vZG9jcy9hbGwtaW4tb25lLXNkay9oeWJyaWQtYXBwcy9jb3Jkb3ZhLylcbiAqIGxldCBwYXltZW50SW50ZW50ID0geyBtaWQgOiBtZXJjaGFudElELCBvcmRlcklkOiBvcmRlcklkLCB0eG5Ub2tlbjogdHJhbnNhY3Rpb25Ub2tlbiwgYW1vdW50OiBhbW91bnQsIGlzU3RhZ2luZzogaXNTdGFnaW5nLCBjYWxsYmFja1VybDpjYWxsQmFja1VSTCwgIHJlc3RyaWN0QXBwSW52b2tlOnJlc3RyaWN0QXBwSW52b2tlICB9XG4gKlxuICogdGhpcy5hbGxJbk9uZVNESy5zdGFydFRyYW5zYWN0aW9uKHBheW1lbnRJbnRlbnQpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKlxuICogRm9yIGlPUzpcbiAqIEFmdGVyIGFkZGluZyB0aGUgcGx1Z2luLCBvcGVuIHRoZSBpT1MgcHJvamVjdCwgeW91IGNhbiBmaW5kIHRoZSBzYW1lIGF0IDxwcm9qZWN0TmFtZT4vcGxhdGZvcm1zL2lvcy5cbiAqIEluIGNhc2UgbWVyY2hhbnQgZG9u4oCZdCBoYXZlIGNhbGxiYWNrIFVSTCwgQWRkIGFuIGVudHJ5IGludG8gSW5mby5wbGlzdCBMU0FwcGxpY2F0aW9uUXVlcmllc1NjaGVtZXMoQXJyYXkpIEl0ZW0gMCAoU3RyaW5nKS0+IHBheXRtXG4gKiBBZGQgYSBVUkwgU2NoZW1lIOKAnHBheXRt4oCdK+KAnU1JROKAnVxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0FsbEluT25lU0RLJyxcbiAgcGx1Z2luOiAnY29yZG92YS1wYXl0bS1hbGxpbm9uZXNkaycsXG4gIHBsdWdpblJlZjogJ0FsbEluT25lU0RLJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9wYXl0bS9wYXl0bS1hbGxpbm9uZXNkay1pb25pYy1jb3Jkb3ZhLmdpdCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbmV4cG9ydCBjbGFzcyBBbGxJbk9uZVNESyBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFRoaXMgZnVuY3Rpb24gY2hlY2tzIGlmIFBheXRtIEFwcGxpY2F0aW9uIGlzIGF2YWlsYWJsZSBvbiB0aGUgZGV2aWNlLlxuICAgKiBJZiBQYXl0bSBleGlzdHMgdGhlbiBpdCBpbnZva2VzIFBheXRtIEFwcGxpY2F0aW9uIHdpdGggdGhlIHBhcmFtZXRlcnMgc2VudCBhbmQgY3JlYXRlcyBhbiBvcmRlci5cbiAgICogSWYgdGhlIFBheXRtIEFwcGxpY2F0aW9uIGlzIG5vdCBhdmFpbGFibGUgdGhlIHRyYW5zYWN0aW9uIGlzIGNvbnRpbnVlZCBvbiBhIHdlYlZpZXcgd2l0aGluIEFsbC1pbi1PbmUgU0RLLlxuICAgKlxuICAgKiBAcGFyYW0gb3B0aW9ucyB7UGF5bWVudEludGVudE1vZGVsfSBUaGVzZSBwYXJhbWV0ZXJzIGFyZSByZXF1aXJlZCBhbmQgd2lsbCBiZSB1c2VkIHRvIGNyZWF0ZSBhbiBvcmRlci5cbiAgICogQHJldHVybnMge1Byb21pc2U8UGF5dG1SZXNwb25zZT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBhIHRyYW5zYWN0aW9uIGNvbXBsZXRlcyhib3RoIGZhaWxlZCBhbmQgc3VjY2Vzc2Z1bCkuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0YXJ0VHJhbnNhY3Rpb24ob3B0aW9uczogUGF5bWVudEludGVudE1vZGVsIHwgUGF5bWVudEFzc2lzdEludGVudE1vZGVsKTogUHJvbWlzZTxQYXl0bVJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG5cbi8qKlxuICogVGhlIHJlc3BvbnNlIHRoYXQgd2lsbCBiZSByZWNpZXZlZCB3aGVuIGFueSB0cmFuc2FjdGlvbiBpcyBjb21wbGV0ZWRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYXl0bVJlc3BvbnNlIHtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICByZXNwb25zZTogc3RyaW5nOyAvLyBBIHN0cmluZ2lmaWVkIHJlc3BvbnNlIG9mIGEgaGFzaG1hcCByZXR1cm5lZCBmcm9tIEFsbC1pbi1PbmUgU0RLXG59XG5cbi8qKlxuICogRm9yIGJlbG93IHBhcmFtZXRlcnMgc2VlIFtkb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5wYXl0bS5jb20vZG9jcy9hbGwtaW4tb25lLXNkay9oeWJyaWQtYXBwcy9jb3Jkb3ZhLylcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYXltZW50SW50ZW50TW9kZWwge1xuICBtaWQ6IHN0cmluZzsgLy8gTWVyY2hhbnQgSURcbiAgb3JkZXJJZDogc3RyaW5nOyAvLyBPcmRlciBJRFxuICB0eG5Ub2tlbjogc3RyaW5nOyAvLyBUcmFuc2FjdGlvbiBUb2tlblxuICBhbW91bnQ6IHN0cmluZzsgLy8gQW1vdW50XG4gIGlzU3RhZ2luZzogYm9vbGVhbjsgLy8gRW52aXJvbm1lbnRcbiAgY2FsbGJhY2tVcmw6IHN0cmluZzsgLy8gQ2FsbGJhY2sgVVJMXG4gIHJlc3RyaWN0QXBwSW52b2tlOiBib29sZWFuOyAvLyBUbyBlbmFibGUgb3IgZGlzYWJsZSB0aGUgcGF5dG0gYXBwIGludm9jYXRpb25cbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYXltZW50QXNzaXN0SW50ZW50TW9kZWwge1xuICBtaWQ6IHN0cmluZzsgLy8gTWVyY2hhbnQgSURcbiAgb3JkZXJJZDogc3RyaW5nOyAvLyBPcmRlciBJRFxuICB0eG5Ub2tlbjogc3RyaW5nOyAvLyBUcmFuc2FjdGlvbiBUb2tlblxuICBhbW91bnQ6IHN0cmluZzsgLy8gQW1vdW50XG4gIGlzU3RhZ2luZzogYm9vbGVhbjsgLy8gRW52aXJvbm1lbnRcbiAgY2FsbGJhY2tVcmw6IHN0cmluZzsgLy8gQ2FsbGJhY2sgVVJMXG4gIHJlc3RyaWN0QXBwSW52b2tlOiBib29sZWFuOyAvLyBUbyBlbmFibGUgb3IgZGlzYWJsZSB0aGUgcGF5dG0gYXBwIGludm9jYXRpb25cbiAgZW5hYmxlQXNzaXN0OiBib29sZWFuOyAvLyBUbyBlbmFibGUgb3IgZGlzYWJsZSB0aGUgQXNzaXN0IChPdHAgYXV0byByZWFkKVxufVxuIl19