import { __extends } from "tslib";
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Injectable } from '@angular/core';
var TealiumInstallReferrer = /** @class */ (function (_super) {
    __extends(TealiumInstallReferrer, _super);
    function TealiumInstallReferrer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TealiumInstallReferrer.prototype.setPersistent = function (instanceName) { return cordova(this, "setPersistent", {}, arguments); };
    TealiumInstallReferrer.prototype.setVolatile = function (instanceName) { return cordova(this, "setVolatile", {}, arguments); };
    TealiumInstallReferrer.pluginName = "TealiumInstallReferrer";
    TealiumInstallReferrer.plugin = "tealium-cordova-installreferrer";
    TealiumInstallReferrer.pluginRef = "window.tealiumInstallReferrer";
    TealiumInstallReferrer.repo = "https://github.com/Tealium/cordova-plugin";
    TealiumInstallReferrer.platforms = ["Android"];
    TealiumInstallReferrer.install = "";
    TealiumInstallReferrer.decorators = [
        { type: Injectable }
    ];
    return TealiumInstallReferrer;
}(AwesomeCordovaNativePlugin));
export { TealiumInstallReferrer };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvdGVhbGl1bS1pbnN0YWxscmVmZXJyZXIvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDO0FBQzVGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0lBaUNDLDBDQUEwQjs7OztJQVFwRSw4Q0FBYSxhQUFDLFlBQW9CO0lBV2xDLDRDQUFXLGFBQUMsWUFBb0I7Ozs7Ozs7O2dCQXBCakMsVUFBVTs7aUNBakNYO0VBa0M0QywwQkFBMEI7U0FBekQsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29yZG92YSwgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuLyoqXG4gKiBAcGFpZFxuICogQG5hbWUgVGVhbGl1bUluc3RhbGxSZWZlcnJlclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIG1vZHVsZSBkZXBlbmRzIG9uIHRoZSBbVGVhbGl1bSBDb3Jkb3ZhIFBsdWdpbl0oaHR0cHM6Ly9naXRodWIuY29tL3RlYWxpdW0vY29yZG92YS1wbHVnaW4pLiBXaXRob3V0IGl0LCB0aGlzIG1vZHVsZSB3aWxsIG5vdCBkbyBhbnl0aGluZy5cbiAqIEltcGxlbWVudHMgYSBCcm9hZGNhc3QgUmVjZWl2ZXIgZm9yIHRoZSBJTlNUQUxMX1JFRkVSUkVSIGludGVudC5cbiAqIEB1c2FnZVxuICogYGBgXG4gKiBpbXBvcnQgeyBUZWFsaXVtSW5zdGFsbFJlZmVycmVyIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3RlYWxpdW0taW5zdGFsbHJlZmVycmVyL25neCc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgaW5zdGFsbFJlZmVycmVyOiBUZWFsaXVtSW5zdGFsbFJlZmVycmVyKSB7IH1cbiAqXG4gKlxuICogdGhpcy5pbnN0YWxsUmVmZXJyZXIuc2V0UGVyc2lzdGVudChcIm1haW5cIik7XG4gKiB0aGlzLmluc3RhbGxSZWZlcnJlci5zZXRWb2xhdGlsZShcIm1haW5cIik7XG4gKlxuICpcbiAqXG4gKiBgYGBcbiAqL1xuXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1RlYWxpdW1JbnN0YWxsUmVmZXJyZXInLFxuICBwbHVnaW46ICd0ZWFsaXVtLWNvcmRvdmEtaW5zdGFsbHJlZmVycmVyJywgLy8gbnBtIHBhY2thZ2UgbmFtZSwgZXhhbXBsZTogY29yZG92YS1wbHVnaW4tY2FtZXJhXG4gIHBsdWdpblJlZjogJ3dpbmRvdy50ZWFsaXVtSW5zdGFsbFJlZmVycmVyJywgLy8gdGhlIHZhcmlhYmxlIHJlZmVyZW5jZSB0byBjYWxsIHRoZSBwbHVnaW4sIGV4YW1wbGU6IG5hdmlnYXRvci5nZW9sb2NhdGlvblxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL1RlYWxpdW0vY29yZG92YS1wbHVnaW4nLCAvLyB0aGUgZ2l0aHViIHJlcG9zaXRvcnkgVVJMIGZvciB0aGUgcGx1Z2luXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJ10sIC8vIEFycmF5IG9mIHBsYXRmb3JtcyBzdXBwb3J0ZWQsIGV4YW1wbGU6IFsnQW5kcm9pZCcsICdpT1MnXVxuICBpbnN0YWxsOiAnJywgLy8gT1BUSU9OQUwgaW5zdGFsbCBjb21tYW5kLCBpbiBjYXNlIHRoZSBwbHVnaW4gcmVxdWlyZXMgdmFyaWFibGVzXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRlYWxpdW1JbnN0YWxsUmVmZXJyZXIgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIHN0b3JlcyB0aGUgaW5zdGFsbCByZWZlcnJlciBpbmZvcm1hdGlvbiBhcyBwZXJzaXN0ZW50IGRhdGFcbiAgICpcbiAgICogQHBhcmFtIGluc3RhbmNlTmFtZSB7c3RyaW5nfSBZb3VyIGFyYml0cmFyeSBUZWFsaXVtIGluc3RhbmNlIG5hbWUgcHJvdmlkZWQgYXQgaW5pdCB0aW1lXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBzb21ldGhpbmcgaGFwcGVuc1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRQZXJzaXN0ZW50KGluc3RhbmNlTmFtZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBmdW5jdGlvbiBzdG9yZXMgdGhlIGluc3RhbGwgcmVmZXJyZXIgaW5mb3JtYXRpb24gYXMgdm9sYXRpbGUgZGF0YVxuICAgKlxuICAgKiBAcGFyYW0gaW5zdGFuY2VOYW1lIHtzdHJpbmd9IFlvdXIgYXJiaXRyYXJ5IFRlYWxpdW0gaW5zdGFuY2UgbmFtZSBwcm92aWRlZCBhdCBpbml0IHRpbWVcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldFZvbGF0aWxlKGluc3RhbmNlTmFtZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==