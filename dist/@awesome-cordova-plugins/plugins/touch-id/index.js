var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var TouchIDOriginal = /** @class */ (function (_super) {
    __extends(TouchIDOriginal, _super);
    function TouchIDOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TouchIDOriginal.prototype.isAvailable = function () { return cordova(this, "isAvailable", {}, arguments); };
    TouchIDOriginal.prototype.verifyFingerprint = function (message) { return cordova(this, "verifyFingerprint", {}, arguments); };
    TouchIDOriginal.prototype.verifyFingerprintWithCustomPasswordFallback = function (message) { return cordova(this, "verifyFingerprintWithCustomPasswordFallback", {}, arguments); };
    TouchIDOriginal.prototype.verifyFingerprintWithCustomPasswordFallbackAndEnterPasswordLabel = function (message, enterPasswordLabel) { return cordova(this, "verifyFingerprintWithCustomPasswordFallbackAndEnterPasswordLabel", {}, arguments); };
    TouchIDOriginal.prototype.didFingerprintDatabaseChange = function () { return cordova(this, "didFingerprintDatabaseChange", {}, arguments); };
    TouchIDOriginal.pluginName = "TouchID";
    TouchIDOriginal.plugin = "cordova-plugin-touch-id";
    TouchIDOriginal.pluginRef = "plugins.touchid";
    TouchIDOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-touch-id";
    TouchIDOriginal.platforms = ["iOS"];
    return TouchIDOriginal;
}(AwesomeCordovaNativePlugin));
var TouchID = new TouchIDOriginal();
export { TouchID };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvdG91Y2gtaWQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyx1Q0FBK0MsTUFBTSwrQkFBK0IsQ0FBQzs7SUFrRC9ELDJCQUEwQjs7OztJQU9yRCw2QkFBVztJQVdYLG1DQUFpQixhQUFDLE9BQWU7SUFXakMsNkRBQTJDLGFBQUMsT0FBZTtJQVkzRCxrRkFBZ0UsYUFDOUQsT0FBZSxFQUNmLGtCQUEwQjtJQVc1Qiw4Q0FBNEI7Ozs7OztrQkF6RzlCO0VBbUQ2QiwwQkFBMEI7U0FBMUMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgVG91Y2ggSURcbiAqIEBkZXNjcmlwdGlvblxuICogU2NhbiB0aGUgZmluZ2VycHJpbnQgb2YgYSB1c2VyIHdpdGggdGhlIFRvdWNoSUQgc2Vuc29yLlxuICpcbiAqIFJlcXVpcmVzIENvcmRvdmEgcGx1Z2luOiBgY29yZG92YS1wbHVnaW4tdG91Y2gtaWRgLiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlIHRoZSBbVG91Y2hJRCBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL0VkZHlWZXJicnVnZ2VuL2NvcmRvdmEtcGx1Z2luLXRvdWNoLWlkKS5cbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVG91Y2hJRCB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy90b3VjaC1pZC9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgdG91Y2hJZDogVG91Y2hJRCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy50b3VjaElkLmlzQXZhaWxhYmxlKClcbiAqICAgLnRoZW4oXG4gKiAgICAgcmVzID0+IGNvbnNvbGUubG9nKCdUb3VjaElEIGlzIGF2YWlsYWJsZSEnKSxcbiAqICAgICBlcnIgPT4gY29uc29sZS5lcnJvcignVG91Y2hJRCBpcyBub3QgYXZhaWxhYmxlJywgZXJyKVxuICogICApO1xuICpcbiAqIHRoaXMudG91Y2hJZC52ZXJpZnlGaW5nZXJwcmludCgnU2NhbiB5b3VyIGZpbmdlcnByaW50IHBsZWFzZScpXG4gKiAgIC50aGVuKFxuICogICAgIHJlcyA9PiBjb25zb2xlLmxvZygnT2snLCByZXMpLFxuICogICAgIGVyciA9PiBjb25zb2xlLmVycm9yKCdFcnJvcicsIGVycilcbiAqICAgKTtcbiAqIGBgYFxuICpcbiAqICMjIyBFcnJvciBDb2Rlc1xuICpcbiAqIFRoZSBwbHVnaW4gd2lsbCByZWplY3QgZm9yIHZhcmlvdXMgcmVhc29ucy4gWW91ciBhcHAgd2lsbCBtb3N0IGxpa2VseSBuZWVkIHRvIHJlc3BvbmQgdG8gdGhlIGNhc2VzIGRpZmZlcmVudGx5LlxuICpcbiAqIEhlcmUgaXMgYSBsaXN0IG9mIHNvbWUgb2YgdGhlIGVycm9yIGNvZGVzOlxuICpcbiAqICAtICBgLTFgIC0gRmluZ2VycHJpbnQgc2NhbiBmYWlsZWQgbW9yZSB0aGFuIDMgdGltZXNcbiAqICAtICBgLTJgIG9yIGAtMTI4YCAtIFVzZXIgdGFwcGVkIHRoZSAnQ2FuY2VsJyBidXR0b25cbiAqICAtICBgLTNgIC0gVXNlciB0YXBwZWQgdGhlICdFbnRlciBQYXNzY29kZScgb3IgJ0VudGVyIFBhc3N3b3JkJyBidXR0b25cbiAqICAtICBgLTRgIC0gVGhlIHNjYW4gd2FzIGNhbmNlbGxlZCBieSB0aGUgc3lzdGVtIChIb21lIGJ1dHRvbiBmb3IgZXhhbXBsZSlcbiAqICAtICBgLTZgIC0gVG91Y2hJRCBpcyBub3QgQXZhaWxhYmxlXG4gKiAgLSAgYC04YCAtIFRvdWNoSUQgaXMgbG9ja2VkIG91dCBmcm9tIHRvbyBtYW55IHRyaWVzXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnVG91Y2hJRCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXRvdWNoLWlkJyxcbiAgcGx1Z2luUmVmOiAncGx1Z2lucy50b3VjaGlkJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FZGR5VmVyYnJ1Z2dlbi9jb3Jkb3ZhLXBsdWdpbi10b3VjaC1pZCcsXG4gIHBsYXRmb3JtczogWydpT1MnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVG91Y2hJRCBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIENoZWNrcyBXaGV0aGVyIFRvdWNoSUQgaXMgYXZhaWxhYmxlIG9yIG5vdC5cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBpZiB5ZXMsIHJlamVjdHMgaWYgbm8uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzQXZhaWxhYmxlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNob3cgVG91Y2hJRCBkaWFsb2cgYW5kIHdhaXQgZm9yIGEgZmluZ2VycHJpbnQgc2Nhbi4gSWYgdXNlciB0YXBzICdFbnRlciBQYXNzd29yZCcgYnV0dG9uLCBicmluZ3MgdXAgc3RhbmRhcmQgc3lzdGVtIHBhc3Njb2RlIHNjcmVlbi5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgIFRoZSBtZXNzYWdlIHRvIGRpc3BsYXlcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhlIHJlc29sdmVzIGlmIHRoZSBmaW5nZXJwcmludCBzY2FuIHdhcyBzdWNjZXNzZnVsLCByZWplY3RzIHdpdGggYW4gZXJyb3IgY29kZSAoc2VlIGFib3ZlKS5cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgdmVyaWZ5RmluZ2VycHJpbnQobWVzc2FnZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2hvdyBUb3VjaElEIGRpYWxvZyBhbmQgd2FpdCBmb3IgYSBmaW5nZXJwcmludCBzY2FuLiBJZiB1c2VyIHRhcHMgJ0VudGVyIFBhc3N3b3JkJyBidXR0b24sIHJlamVjdHMgd2l0aCBjb2RlICctMycgKHNlZSBhYm92ZSkuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlICBUaGUgbWVzc2FnZSB0byBkaXNwbGF5XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoZSByZXNvbHZlcyBpZiB0aGUgZmluZ2VycHJpbnQgc2NhbiB3YXMgc3VjY2Vzc2Z1bCwgcmVqZWN0cyB3aXRoIGFuIGVycm9yIGNvZGUgKHNlZSBhYm92ZSkuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHZlcmlmeUZpbmdlcnByaW50V2l0aEN1c3RvbVBhc3N3b3JkRmFsbGJhY2sobWVzc2FnZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2hvdyBUb3VjaElEIGRpYWxvZyB3aXRoIGN1c3RvbSAnRW50ZXIgUGFzc3dvcmQnIG1lc3NhZ2UgYW5kIHdhaXQgZm9yIGEgZmluZ2VycHJpbnQgc2Nhbi4gSWYgdXNlciB0YXBzICdFbnRlciBQYXNzd29yZCcgYnV0dG9uLCByZWplY3RzIHdpdGggY29kZSAnLTMnIChzZWUgYWJvdmUpLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAgVGhlIG1lc3NhZ2UgdG8gZGlzcGxheVxuICAgKiBAcGFyYW0ge3N0cmluZ30gZW50ZXJQYXNzd29yZExhYmVsICBDdXN0b20gdGV4dCBmb3IgdGhlICdFbnRlciBQYXNzd29yZCcgYnV0dG9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBQcm9taXNlIHRoZSByZXNvbHZlcyBpZiB0aGUgZmluZ2VycHJpbnQgc2NhbiB3YXMgc3VjY2Vzc2Z1bCwgcmVqZWN0cyB3aXRoIGFuIGVycm9yIGNvZGUgKHNlZSBhYm92ZSkuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHZlcmlmeUZpbmdlcnByaW50V2l0aEN1c3RvbVBhc3N3b3JkRmFsbGJhY2tBbmRFbnRlclBhc3N3b3JkTGFiZWwoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIGVudGVyUGFzc3dvcmRMYWJlbDogc3RyaW5nXG4gICk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0aGUgZmluZ2VycHJpbnQgZGF0YWJhc2UgY2hhbmdlZC5cbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyBpZiB5ZXMsIHJlamVjdHMgaWYgbm8uXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRpZEZpbmdlcnByaW50RGF0YWJhc2VDaGFuZ2UoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==