var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Observable } from 'rxjs';
var WebimOriginal = /** @class */ (function (_super) {
    __extends(WebimOriginal, _super);
    function WebimOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebimOriginal.prototype.init = function (params) { return cordova(this, "init", {}, arguments); };
    WebimOriginal.prototype.requestDialog = function () { return cordova(this, "requestDialog", {}, arguments); };
    WebimOriginal.prototype.getMessagesHistory = function (limit, offset) { return cordova(this, "getMessagesHistory", {}, arguments); };
    WebimOriginal.prototype.typingMessage = function (message) { return cordova(this, "typingMessage", {}, arguments); };
    WebimOriginal.prototype.sendMessage = function (message) { return cordova(this, "sendMessage", {}, arguments); };
    WebimOriginal.prototype.replyMessage = function (message, repliedMessage) { return cordova(this, "replyMessage", {}, arguments); };
    WebimOriginal.prototype.sendFile = function (filePath) { return cordova(this, "sendFile", {}, arguments); };
    WebimOriginal.prototype.sendSurveyAnswer = function (surveyAnswer) { return cordova(this, "sendSurveyAnswer", {}, arguments); };
    WebimOriginal.prototype.cancelSurvey = function () { return cordova(this, "cancelSurvey", {}, arguments); };
    WebimOriginal.prototype.onMessage = function () { return cordova(this, "onMessage", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onDeletedMessage = function () { return cordova(this, "onDeletedMessage", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onFile = function (message) { return cordova(this, "onFile", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onTyping = function () { return cordova(this, "onTyping", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onConfirm = function () { return cordova(this, "onConfirm", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onDialog = function () { return cordova(this, "onDialog", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onBan = function () { return cordova(this, "onBan", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.close = function () { return cordova(this, "close", {}, arguments); };
    WebimOriginal.prototype.rateOperator = function (id, rating) { return cordova(this, "rateOperator", {}, arguments); };
    WebimOriginal.prototype.rateOperatorWithNote = function (id, rating, note) { return cordova(this, "rateOperatorWithNote", {}, arguments); };
    WebimOriginal.prototype.sendDialogToEmailAddress = function (emailAddress) { return cordova(this, "sendDialogToEmailAddress", {}, arguments); };
    WebimOriginal.prototype.onUnreadByVisitorMessageCount = function () { return cordova(this, "onUnreadByVisitorMessageCount", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onSurvey = function () { return cordova(this, "onSurvey", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onNextQuestion = function () { return cordova(this, "onNextQuestion", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.onSurveyCancel = function () { return cordova(this, "onSurveyCancel", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.prototype.getUnreadByVisitorMessageCount = function () { return cordova(this, "getUnreadByVisitorMessageCount", {}, arguments); };
    WebimOriginal.prototype.sendKeyboardRequest = function () { return cordova(this, "sendKeyboardRequest", {}, arguments); };
    WebimOriginal.prototype.setChatRead = function () { return cordova(this, "setChatRead", {}, arguments); };
    WebimOriginal.prototype.getShowEmailButton = function () { return cordova(this, "getShowEmailButton", {}, arguments); };
    WebimOriginal.prototype.showRateOperatorWindow = function () { return cordova(this, "showRateOperatorWindow", {}, arguments); };
    WebimOriginal.prototype.onLogging = function () { return cordova(this, "onLogging", { "observable": true, "clearFunction": "close" }, arguments); };
    WebimOriginal.pluginName = "Webim";
    WebimOriginal.plugin = "ru.webim.sdk";
    WebimOriginal.pluginRef = "webimsdk";
    WebimOriginal.repo = "https://github.com/webim/webim-cordova-plugin.git";
    WebimOriginal.install = "cordova plugin add https://github.com/webim/webim-cordova-plugin.git";
    WebimOriginal.platforms = ["Android", "iOS", "Browser"];
    return WebimOriginal;
}(AwesomeCordovaNativePlugin));
var Webim = new WebimOriginal();
export { Webim };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvd2ViaW0vaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyx1Q0FBK0MsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDOztJQTRHUCx5QkFBMEI7Ozs7SUFFbkQsb0JBQUksYUFBQyxNQUFrQjtJQUt2Qiw2QkFBYTtJQUtiLGtDQUFrQixhQUFDLEtBQWEsRUFBRSxNQUFjO0lBS2hELDZCQUFhLGFBQUMsT0FBZTtJQUs3QiwyQkFBVyxhQUFDLE9BQWU7SUFLM0IsNEJBQVksYUFBQyxPQUFlLEVBQUUsY0FBdUI7SUFLckQsd0JBQVEsYUFBQyxRQUFnQjtJQUt6QixnQ0FBZ0IsYUFBQyxZQUFvQjtJQUtyQyw0QkFBWTtJQVFaLHlCQUFTO0lBUVQsZ0NBQWdCO0lBUWhCLHNCQUFNLGFBQUMsT0FBZTtJQVF0Qix3QkFBUTtJQVFSLHlCQUFTO0lBUVQsd0JBQVE7SUFRUixxQkFBSztJQUtMLHFCQUFLO0lBS0wsNEJBQVksYUFBQyxFQUFVLEVBQUUsTUFBYztJQUt2QyxvQ0FBb0IsYUFBQyxFQUFVLEVBQUUsTUFBYyxFQUFFLElBQVk7SUFLN0Qsd0NBQXdCLGFBQUMsWUFBb0I7SUFRN0MsNkNBQTZCO0lBUTdCLHdCQUFRO0lBUVIsOEJBQWM7SUFRZCw4QkFBYztJQUtkLDhDQUE4QjtJQUs5QixtQ0FBbUI7SUFLbkIsMkJBQVc7SUFLWCxrQ0FBa0I7SUFLbEIsc0NBQXNCO0lBUXRCLHlCQUFTOzs7Ozs7O2dCQXJTWDtFQThHMkIsMEJBQTBCO1NBQXhDLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiwgQ29yZG92YSwgUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEluaXRQYXJhbXMge1xuICBhY2NvdW50TmFtZTogc3RyaW5nO1xuICBjbG9zZVdpdGhDbGVhclZpc2l0b3JEYXRhOiBib29sZWFuO1xuICBzdG9yZUhpc3RvcnlMb2NhbGx5OiBib29sZWFuO1xuICBwdXNoVG9rZW46IHN0cmluZztcbiAgbG9jYXRpb246IHN0cmluZztcbiAgdmlzaXRvckZpZWxkczogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERlZmF1bHRSZXNwb25zZSB7XG4gIHJlc3VsdDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFF1b3RlIHtcbiAgc3RhdGU6IHN0cmluZztcbiAgaWQ6IHN0cmluZztcbiAgdGV4dDogc3RyaW5nO1xuICB1cmw6IHN0cmluZztcbiAgdGltZXN0YW1wOiBzdHJpbmc7XG4gIHNlbmRlck5hbWU6IHN0cmluZztcbiAgYXV0aG9ySUQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFbXBsb3llZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGZpcnN0bmFtZTogc3RyaW5nO1xuICBhdmF0YXI6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBLZXlib2FyZCB7XG4gIHN0YXRlOiBzdHJpbmc7XG4gIGJ1dHRvbnM6IEFycmF5PEtleWJvYXJkQnV0dG9uPjtcbiAga2V5Ym9hcmRSZXNwb25zZTogS2V5Ym9hcmRSZXNwb25zZTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBLZXlib2FyZFJlcXVlc3Qge1xuICBtZXNzYWdlSUQ6IHN0cmluZztcbiAgYnV0dG9uOiBLZXlib2FyZEJ1dHRvbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBLZXlib2FyZEJ1dHRvbiB7XG4gIHRleHQ6IHN0cmluZztcbiAgaWQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBLZXlib2FyZFJlc3BvbnNlIHtcbiAgYnV0dG9uSUQ6IHN0cmluZztcbiAgbWVzc2FnZUlEOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZSB7XG4gIGlkOiBzdHJpbmc7XG4gIGN1cnJlbnRDaGF0SUQ6IHN0cmluZztcbiAgdGV4dDogc3RyaW5nO1xuICB1cmw6IHN0cmluZztcbiAgaW1hZ2VXaWR0aDogbnVtYmVyO1xuICBpbWFnZUhlaWdodDogbnVtYmVyO1xuICB0aHVtYlVybDogc3RyaW5nO1xuICB0aW1lc3RhbXA6IHN0cmluZztcbiAgc2VuZGVyOiBzdHJpbmc7XG4gIHF1b3RlOiBRdW90ZTtcbiAgb3BlcmF0b3I6IEVtcGxveWVlO1xuICBrZXlib2FyZDogS2V5Ym9hcmQ7XG4gIGtleWJvYXJkUmVxdWVzdDogS2V5Ym9hcmRSZXF1ZXN0O1xuICBpc0ZpcnN0OiBib29sZWFuO1xuICBpc1JlYWRCeU9wZXJhdG9yOiBib29sZWFuO1xuICBjYW5CZVJlcGxpZWQ6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGlhbG9nU3RhdGUge1xuICBlbXBsb3llZTogRW1wbG95ZWU7XG59XG5cbmV4cG9ydCB0eXBlIE1lc3NhZ2VzSGlzdG9yeVJlc3BvbnNlID0gQXJyYXk8TWVzc2FnZT47XG5leHBvcnQgdHlwZSBNZXNzYWdlUmVzcG9uc2UgPSBNZXNzYWdlO1xuZXhwb3J0IHR5cGUgRGlhbG9nU3RhdGVSZXNwb25zZSA9IERpYWxvZ1N0YXRlO1xuXG4vKipcbiAqIEBuYW1lIFdlYmltXG4gKiBAZGVzY3JpcHRpb25cbiAqIEEgY29yZG92YSBwbHVnaW4sIGEgSlMgdmVyc2lvbiBvZiBXZWJpbSBTREtcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgV2ViaW0gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvd2ViaW0vbmd4JztcbiAqXG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSB3ZWJpbTogV2ViaW0pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKiB0aGlzLndlYmltLmZ1bmN0aW9uTmFtZSgnSGkgYnJvJywgNDIpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnV2ViaW0nLFxuICBwbHVnaW46ICdydS53ZWJpbS5zZGsnLFxuICBwbHVnaW5SZWY6ICd3ZWJpbXNkaycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vd2ViaW0vd2ViaW0tY29yZG92YS1wbHVnaW4uZ2l0JyxcbiAgaW5zdGFsbDogJ2NvcmRvdmEgcGx1Z2luIGFkZCBodHRwczovL2dpdGh1Yi5jb20vd2ViaW0vd2ViaW0tY29yZG92YS1wbHVnaW4uZ2l0JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ0Jyb3dzZXInXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgV2ViaW0gZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XG4gIEBDb3Jkb3ZhKClcbiAgaW5pdChwYXJhbXM6IEluaXRQYXJhbXMpOiBQcm9taXNlPERlZmF1bHRSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgcmVxdWVzdERpYWxvZygpOiBQcm9taXNlPERlZmF1bHRSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0TWVzc2FnZXNIaXN0b3J5KGxpbWl0OiBudW1iZXIsIG9mZnNldDogbnVtYmVyKTogUHJvbWlzZTxNZXNzYWdlc0hpc3RvcnlSZXNwb25zZSB8IERlZmF1bHRSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgdHlwaW5nTWVzc2FnZShtZXNzYWdlOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgc2VuZE1lc3NhZ2UobWVzc2FnZTogc3RyaW5nKTogUHJvbWlzZTxNZXNzYWdlUmVzcG9uc2UgfCBEZWZhdWx0UmVzcG9uc2U+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSgpXG4gIHJlcGx5TWVzc2FnZShtZXNzYWdlOiBzdHJpbmcsIHJlcGxpZWRNZXNzYWdlOiBNZXNzYWdlKTogUHJvbWlzZTxNZXNzYWdlUmVzcG9uc2UgfCBEZWZhdWx0UmVzcG9uc2U+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSgpXG4gIHNlbmRGaWxlKGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZyB8IERlZmF1bHRSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgc2VuZFN1cnZleUFuc3dlcihzdXJ2ZXlBbnN3ZXI6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoKVxuICBjYW5jZWxTdXJ2ZXkoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnY2xvc2UnLFxuICB9KVxuICBvbk1lc3NhZ2UoKTogT2JzZXJ2YWJsZTxNZXNzYWdlUmVzcG9uc2U+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnY2xvc2UnLFxuICB9KVxuICBvbkRlbGV0ZWRNZXNzYWdlKCk6IE9ic2VydmFibGU8TWVzc2FnZVJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ2Nsb3NlJyxcbiAgfSlcbiAgb25GaWxlKG1lc3NhZ2U6IHN0cmluZyk6IE9ic2VydmFibGU8TWVzc2FnZVJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ2Nsb3NlJyxcbiAgfSlcbiAgb25UeXBpbmcoKTogT2JzZXJ2YWJsZTx1bmtub3duPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ2Nsb3NlJyxcbiAgfSlcbiAgb25Db25maXJtKCk6IE9ic2VydmFibGU8TWVzc2FnZVJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ2Nsb3NlJyxcbiAgfSlcbiAgb25EaWFsb2coKTogT2JzZXJ2YWJsZTxEaWFsb2dTdGF0ZVJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoe1xuICAgIG9ic2VydmFibGU6IHRydWUsXG4gICAgY2xlYXJGdW5jdGlvbjogJ2Nsb3NlJyxcbiAgfSlcbiAgb25CYW4oKTogT2JzZXJ2YWJsZTx1bmtub3duPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgQENvcmRvdmEoKVxuICBjbG9zZSgpOiBQcm9taXNlPERlZmF1bHRSZXNwb25zZT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgcmF0ZU9wZXJhdG9yKGlkOiBzdHJpbmcsIHJhdGluZzogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSgpXG4gIHJhdGVPcGVyYXRvcldpdGhOb3RlKGlkOiBzdHJpbmcsIHJhdGluZzogbnVtYmVyLCBub3RlOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgc2VuZERpYWxvZ1RvRW1haWxBZGRyZXNzKGVtYWlsQWRkcmVzczogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnY2xvc2UnLFxuICB9KVxuICBvblVucmVhZEJ5VmlzaXRvck1lc3NhZ2VDb3VudCgpOiBPYnNlcnZhYmxlPHVua25vd24+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnY2xvc2UnLFxuICB9KVxuICBvblN1cnZleSgpOiBPYnNlcnZhYmxlPHVua25vd24+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnY2xvc2UnLFxuICB9KVxuICBvbk5leHRRdWVzdGlvbigpOiBPYnNlcnZhYmxlPHVua25vd24+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnY2xvc2UnLFxuICB9KVxuICBvblN1cnZleUNhbmNlbCgpOiBPYnNlcnZhYmxlPHVua25vd24+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSgpXG4gIGdldFVucmVhZEJ5VmlzaXRvck1lc3NhZ2VDb3VudCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgc2VuZEtleWJvYXJkUmVxdWVzdCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgc2V0Q2hhdFJlYWQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICBAQ29yZG92YSgpXG4gIGdldFNob3dFbWFpbEJ1dHRvbigpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKClcbiAgc2hvd1JhdGVPcGVyYXRvcldpbmRvdygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIEBDb3Jkb3ZhKHtcbiAgICBvYnNlcnZhYmxlOiB0cnVlLFxuICAgIGNsZWFyRnVuY3Rpb246ICdjbG9zZScsXG4gIH0pXG4gIG9uTG9nZ2luZygpOiBPYnNlcnZhYmxlPHVua25vd24+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==