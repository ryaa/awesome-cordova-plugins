var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Observable } from 'rxjs';
export var EnumResolution;
(function (EnumResolution) {
    EnumResolution[EnumResolution["RESOLUTION_AUTO"] = 0] = "RESOLUTION_AUTO";
    EnumResolution[EnumResolution["RESOLUTION_480P"] = 1] = "RESOLUTION_480P";
    EnumResolution[EnumResolution["RESOLUTION_720P"] = 2] = "RESOLUTION_720P";
    EnumResolution[EnumResolution["RESOLUTION_1080P"] = 3] = "RESOLUTION_1080P";
    EnumResolution[EnumResolution["RESOLUTION_2K"] = 4] = "RESOLUTION_2K";
    EnumResolution[EnumResolution["RESOLUTION_4K"] = 5] = "RESOLUTION_4K";
})(EnumResolution || (EnumResolution = {}));
var BarcodeScannerOriginal = /** @class */ (function (_super) {
    __extends(BarcodeScannerOriginal, _super);
    function BarcodeScannerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BarcodeScannerOriginal.prototype.init = function (license) { return cordova(this, "init", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.initRuntimeSettingsWithString = function (settings) { return cordova(this, "initRuntimeSettingsWithString", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.outputSettingsToString = function () { return cordova(this, "outputSettingsToString", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.destroy = function () { return cordova(this, "destroy", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.startScanning = function (options) { return cordova(this, "startScanning", { "successIndex": 1, "errorIndex": 2, "observable": true }, arguments); };
    BarcodeScannerOriginal.prototype.stopScanning = function () { return cordova(this, "stopScanning", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.resumeScanning = function () { return cordova(this, "resumeScanning", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.pauseScanning = function () { return cordova(this, "pauseScanning", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.getResolution = function () { return cordova(this, "getResolution", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.switchTorch = function (desiredStatus) { return cordova(this, "switchTorch", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.setZoom = function (factor) { return cordova(this, "setZoom", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.prototype.setFocus = function (point) { return cordova(this, "setFocus", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    BarcodeScannerOriginal.pluginName = "dynamsoft-barcode-scanner";
    BarcodeScannerOriginal.plugin = "cordova-plugin-dynamsoft-barcode-reader";
    BarcodeScannerOriginal.pluginRef = "cordova.plugins.DBR";
    BarcodeScannerOriginal.repo = "https://github.com/xulihang/cordova-plugin-dynamsoft-barcode-reader";
    BarcodeScannerOriginal.install = "";
    BarcodeScannerOriginal.installVariables = [];
    BarcodeScannerOriginal.platforms = ["Android", "iOS"];
    return BarcodeScannerOriginal;
}(AwesomeCordovaNativePlugin));
var BarcodeScanner = new BarcodeScannerOriginal();
export { BarcodeScanner };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLHVDQU9OLE1BQU0sK0JBQStCLENBQUM7QUFDdkMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQWtDbEMsTUFBTSxDQUFOLElBQVksY0FPWDtBQVBELFdBQVksY0FBYztJQUN4Qix5RUFBbUIsQ0FBQTtJQUNuQix5RUFBbUIsQ0FBQTtJQUNuQix5RUFBbUIsQ0FBQTtJQUNuQiwyRUFBb0IsQ0FBQTtJQUNwQixxRUFBaUIsQ0FBQTtJQUNqQixxRUFBaUIsQ0FBQTtBQUNuQixDQUFDLEVBUFcsY0FBYyxLQUFkLGNBQWMsUUFPekI7O0lBa0NtQyxrQ0FBMEI7Ozs7SUFVNUQsNkJBQUksYUFBQyxPQUFlO0lBYXBCLHNEQUE2QixhQUFDLFFBQWlCO0lBUy9DLCtDQUFzQjtJQVN0QixnQ0FBTztJQWNQLHNDQUFhLGFBQUMsT0FBcUI7SUFTbkMscUNBQVk7SUFTWix1Q0FBYztJQVNkLHNDQUFhO0lBU2Isc0NBQWE7SUFVYixvQ0FBVyxhQUFDLGFBQXFCO0lBVWpDLGdDQUFPLGFBQUMsTUFBYztJQVV0QixpQ0FBUSxhQUFDLEtBQStCOzs7Ozs7Ozt5QkE3TTFDO0VBb0ZvQywwQkFBMEI7U0FBakQsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFBsdWdpbixcbiAgQ29yZG92YSxcbiAgQ29yZG92YVByb3BlcnR5LFxuICBDb3Jkb3ZhSW5zdGFuY2UsXG4gIEluc3RhbmNlUHJvcGVydHksXG4gIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLFxufSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbi8qKlxuICogZGNlTGljZW5zZTogTGljZW5zZSBvZiBEeW5hbXNvZnQgQ2FtZXJhIEVuaGFuY2VyXG4gKiByZXNvbHV0aW9uOiB1c2UgRW51bVJlc29sdXRpb25cbiAqIHJvdGF0ZTogY29udmVydCBmcmFtZSB0byBiaXRtYXAgYW5kIHJvdGF0ZSBpdFxuICovXG5leHBvcnQgaW50ZXJmYWNlIFNjYW5PcHRpb25zIHtcbiAgZGNlTGljZW5zZT86IHN0cmluZztcbiAgcmVzb2x1dGlvbj86IG51bWJlcjtcbiAgcm90YXRlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGcmFtZVJlc3VsdCB7XG4gIGZyYW1lV2lkdGg6IG51bWJlcjtcbiAgZnJhbWVIZWlnaHQ6IG51bWJlcjtcbiAgZnJhbWVSb3RhdGlvbjogbnVtYmVyO1xuICByZXN1bHRzOiBCYXJjb2RlUmVzdWx0W107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFyY29kZVJlc3VsdCB7XG4gIGJhcmNvZGVUZXh0OiBzdHJpbmc7XG4gIGJhcmNvZGVGb3JtYXQ6IHN0cmluZztcbiAgYmFyY29kZUJ5dGVzQmFzZTY0Pzogc3RyaW5nO1xuICB4MTogbnVtYmVyO1xuICB4MjogbnVtYmVyO1xuICB4MzogbnVtYmVyO1xuICB4NDogbnVtYmVyO1xuICB5MTogbnVtYmVyO1xuICB5MjogbnVtYmVyO1xuICB5MzogbnVtYmVyO1xuICB5NDogbnVtYmVyO1xufVxuXG5leHBvcnQgZW51bSBFbnVtUmVzb2x1dGlvbiB7XG4gIFJFU09MVVRJT05fQVVUTyA9IDAsXG4gIFJFU09MVVRJT05fNDgwUCA9IDEsXG4gIFJFU09MVVRJT05fNzIwUCA9IDIsXG4gIFJFU09MVVRJT05fMTA4MFAgPSAzLFxuICBSRVNPTFVUSU9OXzJLID0gNCxcbiAgUkVTT0xVVElPTl80SyA9IDUsXG59XG5cbi8qKlxuICogQG5hbWUgZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBzY2FucyBiYXJjb2RlcyB1c2luZyBEeW5hbXNvZnQgQmFyY29kZSBSZWFkZXJcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IGR5bmFtc29mdC1iYXJjb2RlLXNjYW5uZXIgfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lcic7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lcjogZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICpcbiAqIGF3YWl0IHRoaXMuZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lci5pbml0KFwibGljZW5zZVwiKTtcbiAqIHRoaXMuZHluYW1zb2Z0LWJhcmNvZGUtc2Nhbm5lci5zdGFydFNjYW5uaW5nKFwibGljZW5zZVwiKS5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcbiAgIH0pO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ2R5bmFtc29mdC1iYXJjb2RlLXNjYW5uZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1keW5hbXNvZnQtYmFyY29kZS1yZWFkZXInLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuREJSJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS94dWxpaGFuZy9jb3Jkb3ZhLXBsdWdpbi1keW5hbXNvZnQtYmFyY29kZS1yZWFkZXInLFxuICBpbnN0YWxsOiAnJyxcbiAgaW5zdGFsbFZhcmlhYmxlczogW10sXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBCYXJjb2RlU2Nhbm5lciBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEluaXRpYWxpemUgRHluYW1zb2Z0IEJhcmNvZGUgUmVhZGVyXG4gICAqIEBwYXJhbSBsaWNlbnNlIHtzdHJpbmd9XG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBpbml0aWFsaXphdGlvbiBpcyBkb25lXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAxLFxuICAgIGVycm9ySW5kZXg6IDIsXG4gIH0pXG4gIGluaXQobGljZW5zZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU2V0IHVwIHJ1bnRpbWUgc2V0dGluZ3NcbiAgICogQHBhcmFtIHNldHRpbmdzIHtzdHJpbmd9IHJ1bnRpbWUgc2V0dGluZ3MgdGVtcGxhdGUgaW4gSlNPTlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAxLFxuICAgIGVycm9ySW5kZXg6IDIsXG4gIH0pXG4gIGluaXRSdW50aW1lU2V0dGluZ3NXaXRoU3RyaW5nKHNldHRpbmdzPzogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogT3V0cHV0IHJ1bnRpbWUgc2V0dGluZ3MgdG8gSlNPTiBzdHJpbmdcbiAgICogQHJldHVybiB7UHJvbWlzZTxTdHJpbmc+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzdWNjZXNzSW5kZXg6IDEsIGVycm9ySW5kZXg6IDIgfSlcbiAgb3V0cHV0U2V0dGluZ3NUb1N0cmluZygpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBkZXN0cm95IER5bmFtc29mdCBCYXJjb2RlIFJlYWRlclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7IHN1Y2Nlc3NJbmRleDogMSwgZXJyb3JJbmRleDogMiB9KVxuICBkZXN0cm95KCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIHN0YXJ0IHRoZSBjYW1lcmEgdG8gc2NhbiBiYXJjb2Rlc1xuICAgKiBAcGFyYW0gb3B0aW9ucyB7U2Nhbk9wdGlvbnN9XG4gICAqIEByZXR1cm4ge09ic2VydmFibGU8RnJhbWVSZXN1bHQ+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIHN1Y2Nlc3NJbmRleDogMSxcbiAgICBlcnJvckluZGV4OiAyLFxuICAgIG9ic2VydmFibGU6IHRydWUsXG4gIH0pXG4gIHN0YXJ0U2Nhbm5pbmcob3B0aW9ucz86IFNjYW5PcHRpb25zKTogT2JzZXJ2YWJsZTxGcmFtZVJlc3VsdD4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBzdG9wIHNjYW5uaW5nXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2VcbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3VjY2Vzc0luZGV4OiAxLCBlcnJvckluZGV4OiAyIH0pXG4gIHN0b3BTY2FubmluZygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiByZXN1bWUgc2Nhbm5pbmdcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzdWNjZXNzSW5kZXg6IDEsIGVycm9ySW5kZXg6IDIgfSlcbiAgcmVzdW1lU2Nhbm5pbmcoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogcGF1c2Ugc2Nhbm5pbmdcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzdWNjZXNzSW5kZXg6IDEsIGVycm9ySW5kZXg6IDIgfSlcbiAgcGF1c2VTY2FubmluZygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBnZXQgcmVzb2x1dGlvbiBsaWtlOiAxMjgweDcyMFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHN0cmluZz59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7IHN1Y2Nlc3NJbmRleDogMSwgZXJyb3JJbmRleDogMiB9KVxuICBnZXRSZXNvbHV0aW9uKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIHN3aXRjaCB0b3JjaFxuICAgKiBAcGFyYW0gZGVzaXJlZFN0YXR1cyB7c3RyaW5nfSBvbiBvciBvZmZcbiAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZVxuICAgKi9cbiAgQENvcmRvdmEoeyBzdWNjZXNzSW5kZXg6IDEsIGVycm9ySW5kZXg6IDIgfSlcbiAgc3dpdGNoVG9yY2goZGVzaXJlZFN0YXR1czogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogc2V0IHpvb21cbiAgICogQHBhcmFtIGZhY3RvciB7bnVtYmVyfSB6b29tIGZhY3RvclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7IHN1Y2Nlc3NJbmRleDogMSwgZXJyb3JJbmRleDogMiB9KVxuICBzZXRab29tKGZhY3RvcjogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogc2V0IGZvY3VzXG4gICAqIEBwYXJhbSBwb2ludCBmb2N1cyBwb2ludFxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlXG4gICAqL1xuICBAQ29yZG92YSh7IHN1Y2Nlc3NJbmRleDogMSwgZXJyb3JJbmRleDogMiB9KVxuICBzZXRGb2N1cyhwb2ludDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==