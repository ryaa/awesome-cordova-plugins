var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Observable } from 'rxjs';
export var AdViewPosition;
(function (AdViewPosition) {
    AdViewPosition["TOP_CENTER"] = "top_center";
    AdViewPosition["TOP_RIGHT"] = "top_right";
    AdViewPosition["CENTERED"] = "centered";
    AdViewPosition["CENTER_LEFT"] = "center_left";
    AdViewPosition["CENTER_RIGHT"] = "center_right";
    AdViewPosition["BOTTOM_LEFT"] = "bottom_left";
    AdViewPosition["BOTTOM_CENTER"] = "bottom_center";
    AdViewPosition["BOTTOM_RIGHT"] = "bottom_right";
})(AdViewPosition || (AdViewPosition = {}));
export var ConsentDialogState;
(function (ConsentDialogState) {
    ConsentDialogState[ConsentDialogState["UNKNOWN"] = 0] = "UNKNOWN";
    ConsentDialogState[ConsentDialogState["APPLIES"] = 1] = "APPLIES";
    ConsentDialogState[ConsentDialogState["DOES_NOT_APPLY"] = 2] = "DOES_NOT_APPLY";
})(ConsentDialogState || (ConsentDialogState = {}));
var ApplovinOriginal = /** @class */ (function (_super) {
    __extends(ApplovinOriginal, _super);
    function ApplovinOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ApplovinOriginal.prototype.initialize = function (sdkKey) { return cordova(this, "initialize", {}, arguments); };
    ApplovinOriginal.prototype.showMediationDebugger = function () { return cordova(this, "showMediationDebugger", {}, arguments); };
    ApplovinOriginal.prototype.getConsentDialogState = function () { return cordova(this, "getConsentDialogState", {}, arguments); };
    ApplovinOriginal.prototype.setHasUserConsent = function (hasUserConsent) { return cordova(this, "setHasUserConsent", {}, arguments); };
    ApplovinOriginal.prototype.hasUserConsent = function () { return cordova(this, "hasUserConsent", {}, arguments); };
    ApplovinOriginal.prototype.setIsAgeRestrictedUser = function (isAgeRestrictedUser) { return cordova(this, "setIsAgeRestrictedUser", {}, arguments); };
    ApplovinOriginal.prototype.isAgeRestrictedUser = function () { return cordova(this, "isAgeRestrictedUser", {}, arguments); };
    ApplovinOriginal.prototype.setDoNotSell = function (isDoNotSell) { return cordova(this, "setDoNotSell", {}, arguments); };
    ApplovinOriginal.prototype.isDoNotSell = function () { return cordova(this, "isDoNotSell", {}, arguments); };
    ApplovinOriginal.prototype.isTablet = function () { return cordova(this, "isTablet", {}, arguments); };
    ApplovinOriginal.prototype.setUserId = function (userId) { return cordova(this, "setUserId", {}, arguments); };
    ApplovinOriginal.prototype.setMuted = function () { return cordova(this, "setMuted", {}, arguments); };
    ApplovinOriginal.prototype.setVerboseLogging = function (verboseLoggingEnabled) { return cordova(this, "setVerboseLogging", {}, arguments); };
    ApplovinOriginal.prototype.setTestDeviceAdvertisingIds = function (advertisingIds) { return cordova(this, "setTestDeviceAdvertisingIds", {}, arguments); };
    ApplovinOriginal.prototype.trackEvent = function (event, parameters) { return cordova(this, "trackEvent", {}, arguments); };
    ApplovinOriginal.prototype.createBanner = function (adUnitId, position) { return cordova(this, "createBanner", {}, arguments); };
    ApplovinOriginal.prototype.setBannerBackgroundColor = function (adUnitId, hexColorCode) { return cordova(this, "setBannerBackgroundColor", {}, arguments); };
    ApplovinOriginal.prototype.setBannerPlacement = function (adUnitId, placement) { return cordova(this, "setBannerPlacement", {}, arguments); };
    ApplovinOriginal.prototype.setBannerExtraParameter = function (adUnitId, key, value) { return cordova(this, "setBannerExtraParameter", {}, arguments); };
    ApplovinOriginal.prototype.showBanner = function (adUnitId) { return cordova(this, "showBanner", {}, arguments); };
    ApplovinOriginal.prototype.hideBanner = function (adUnitId) { return cordova(this, "hideBanner", {}, arguments); };
    ApplovinOriginal.prototype.destroyBanner = function (adUnitId) { return cordova(this, "destroyBanner", {}, arguments); };
    ApplovinOriginal.prototype.createMRec = function (adUnitId, position) { return cordova(this, "createMRec", {}, arguments); };
    ApplovinOriginal.prototype.setMRecBackgroundColor = function (adUnitId, hexColorCode) { return cordova(this, "setMRecBackgroundColor", {}, arguments); };
    ApplovinOriginal.prototype.setMRecPlacement = function (adUnitId, placement) { return cordova(this, "setMRecPlacement", {}, arguments); };
    ApplovinOriginal.prototype.setMRecExtraParameter = function (adUnitId, key, value) { return cordova(this, "setMRecExtraParameter", {}, arguments); };
    ApplovinOriginal.prototype.showMRec = function (adUnitId) { return cordova(this, "showMRec", {}, arguments); };
    ApplovinOriginal.prototype.hideMRec = function (adUnitId) { return cordova(this, "hideMRec", {}, arguments); };
    ApplovinOriginal.prototype.destroyMRec = function (adUnitId) { return cordova(this, "destroyMRec", {}, arguments); };
    ApplovinOriginal.prototype.loadInterstitial = function (adUnitId) { return cordova(this, "loadInterstitial", {}, arguments); };
    ApplovinOriginal.prototype.showInterstitial = function (adUnitId, placement) { return cordova(this, "showInterstitial", {}, arguments); };
    ApplovinOriginal.prototype.setInterstitialExtraParameter = function (adUnitId, key, value) { return cordova(this, "setInterstitialExtraParameter", {}, arguments); };
    ApplovinOriginal.prototype.onInterstitialLoaded = function () { return cordova(this, "onInterstitialLoaded", { "eventObservable": true, "event": "OnInterstitialLoadedEvent" }, arguments); };
    ApplovinOriginal.prototype.onInterstitialLoadFailed = function () { return cordova(this, "onInterstitialLoadFailed", { "eventObservable": true, "event": "OnInterstitialLoadFailedEvent" }, arguments); };
    ApplovinOriginal.prototype.onInterstitialDisplayed = function () { return cordova(this, "onInterstitialDisplayed", { "eventObservable": true, "event": "OnInterstitialDisplayedEvent" }, arguments); };
    ApplovinOriginal.prototype.onInterstitialHidden = function () { return cordova(this, "onInterstitialHidden", { "eventObservable": true, "event": "OnInterstitialHiddenEvent" }, arguments); };
    ApplovinOriginal.prototype.onInterstitialAdFailedToDisplay = function () { return cordova(this, "onInterstitialAdFailedToDisplay", { "eventObservable": true, "event": "OnInterstitialAdFailedToDisplayEvent" }, arguments); };
    ApplovinOriginal.prototype.loadRewardedAd = function (adUnitId) { return cordova(this, "loadRewardedAd", {}, arguments); };
    ApplovinOriginal.prototype.showRewardedAd = function (adUnitId, placement) { return cordova(this, "showRewardedAd", {}, arguments); };
    ApplovinOriginal.prototype.setRewardedAdExtraParameter = function (adUnitId, key, value) { return cordova(this, "setRewardedAdExtraParameter", {}, arguments); };
    ApplovinOriginal.prototype.onRewardedAdLoaded = function () { return cordova(this, "onRewardedAdLoaded", { "eventObservable": true, "event": "OnRewardedAdLoadedEvent" }, arguments); };
    ApplovinOriginal.prototype.onRewardedAdLoadFailed = function () { return cordova(this, "onRewardedAdLoadFailed", { "eventObservable": true, "event": "OnRewardedAdLoadFailedEvent" }, arguments); };
    ApplovinOriginal.prototype.onRewardedAdDisplayed = function () { return cordova(this, "onRewardedAdDisplayed", { "eventObservable": true, "event": "OnRewardedAdDisplayedEvent" }, arguments); };
    ApplovinOriginal.prototype.onRewardedAdHidden = function () { return cordova(this, "onRewardedAdHidden", { "eventObservable": true, "event": "OnRewardedAdHiddenEvent" }, arguments); };
    ApplovinOriginal.prototype.onRewardedAdAdFailedToDisplay = function () { return cordova(this, "onRewardedAdAdFailedToDisplay", { "eventObservable": true, "event": "OnRewardedAdAdFailedToDisplayEvent" }, arguments); };
    ApplovinOriginal.pluginName = "Applovin";
    ApplovinOriginal.plugin = "cordova-plugin-applovin-max";
    ApplovinOriginal.pluginRef = "applovin";
    ApplovinOriginal.repo = "https://github.com/AppLovin/AppLovin-MAX-Cordova";
    ApplovinOriginal.platforms = ["Android", "iOS"];
    return ApplovinOriginal;
}(AwesomeCordovaNativePlugin));
var Applovin = new ApplovinOriginal();
export { Applovin };
//# sourceMappingURL=data:application/json;base64,