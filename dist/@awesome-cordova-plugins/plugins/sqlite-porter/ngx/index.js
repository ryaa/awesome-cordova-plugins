import { __decorate, __extends } from "tslib";
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var SQLitePorter = /** @class */ (function (_super) {
    __extends(SQLitePorter, _super);
    function SQLitePorter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SQLitePorter.prototype.importSqlToDb = function (db, sql) { return cordova(this, "importSqlToDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorter.prototype.exportDbToSql = function (db) { return cordova(this, "exportDbToSql", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorter.prototype.importJsonToDb = function (db, json) { return cordova(this, "importJsonToDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorter.prototype.exportDbToJson = function (db) { return cordova(this, "exportDbToJson", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorter.prototype.wipeDb = function (db) { return cordova(this, "wipeDb", { "callbackStyle": "object", "successName": "successFn", "errorName": "errorFn" }, arguments); };
    SQLitePorter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SQLitePorter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
    SQLitePorter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SQLitePorter });
    SQLitePorter.pluginName = "SQLitePorter";
    SQLitePorter.plugin = "uk.co.workingedge.cordova.plugin.sqliteporter";
    SQLitePorter.pluginRef = "cordova.plugins.sqlitePorter";
    SQLitePorter.repo = "https://github.com/dpa99c/cordova-sqlite-porter";
    SQLitePorter.platforms = ["Amazon Fire OS", "Android", "BlackBerry 10", "Browser", "iOS", "Tizen", "Windows", "Windows Phone"];
    SQLitePorter = __decorate([], SQLitePorter);
    return SQLitePorter;
}(AwesomeCordovaNativePlugin));
export { SQLitePorter };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: SQLitePorter, decorators: [{
            type: Injectable
        }], propDecorators: { importSqlToDb: [], exportDbToSql: [], importJsonToDb: [], exportDbToJson: [], wipeDb: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvc3FsaXRlLXBvcnRlci9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sdUNBQStDLE1BQU0sK0JBQStCLENBQUM7QUFDNUYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0lBOENULGdDQUEwQjs7OztJQWExRCxvQ0FBYSxhQUFDLEVBQU8sRUFBRSxHQUFXO0lBZWxDLG9DQUFhLGFBQUMsRUFBTztJQWdCckIscUNBQWMsYUFBQyxFQUFPLEVBQUUsSUFBUztJQWVqQyxxQ0FBYyxhQUFDLEVBQU87SUFldEIsNkJBQU0sYUFBQyxFQUFPOzhHQTFFSCxZQUFZO2tIQUFaLFlBQVk7Ozs7OztJQUFaLFlBQVksa0JBQVosWUFBWTt1QkEvQ3pCO0VBK0NrQywwQkFBMEI7U0FBL0MsWUFBWTs0RkFBWixZQUFZO2tCQUR4QixVQUFVOzhCQWNULGFBQWEsTUFlYixhQUFhLE1BZ0JiLGNBQWMsTUFlZCxjQUFjLE1BZWQsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgU1FMaXRlIFBvcnRlclxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIENvcmRvdmEvUGhvbmVnYXAgcGx1Z2luIGNhbiBiZSB1c2VkIHRvIGltcG9ydC9leHBvcnQgdG8vZnJvbSBhIFNRTGl0ZSBkYXRhYmFzZSB1c2luZyBlaXRoZXIgU1FMIG9yIEpTT04uXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFNRTGl0ZVBvcnRlciB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9zcWxpdGUtcG9ydGVyL25neCc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgc3FsaXRlUG9ydGVyOiBTUUxpdGVQb3J0ZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIGxldCBkYiA9IHdpbmRvdy5vcGVuRGF0YWJhc2UoJ1Rlc3QnLCAnMS4wJywgJ1Rlc3REQicsIDEgKiAxMDI0KTtcbiAqIC8vIG9yIHdlIGNhbiB1c2UgU1FMaXRlIHBsdWdpblxuICogLy8gd2Ugd2lsbCBhc3N1bWUgdGhhdCB3ZSBpbmplY3RlZCBTUUxpdGUgaW50byB0aGlzIGNvbXBvbmVudCBhcyBzcWxpdGVcbiAqIHRoaXMuc3FsaXRlLmNyZWF0ZSh7XG4gKiAgIG5hbWU6ICdkYXRhLmRiJyxcbiAqICAgbG9jYXRpb246ICdkZWZhdWx0J1xuICogfSlcbiAqICAgLnRoZW4oKGRiOiBhbnkpID0+IHtcbiAqICAgICBsZXQgZGJJbnN0YW5jZSA9IGRiLl9vYmplY3RJbnN0YW5jZTtcbiAqICAgICAvLyB3ZSBjYW4gcGFzcyBkYi5fb2JqZWN0SW5zdGFuY2UgYXMgdGhlIGRhdGFiYXNlIG9wdGlvbiBpbiBhbGwgU1FMaXRlUG9ydGVyIG1ldGhvZHNcbiAqICAgfSk7XG4gKlxuICpcbiAqIGxldCBzcWwgPSAnQ1JFQVRFIFRBQkxFIEFydGlzdCAoW0lkXSBQUklNQVJZIEtFWSwgW1RpdGxlXSk7JyArXG4gKiAgICAgICAgICAgICdJTlNFUlQgSU5UTyBBcnRpc3QoSWQsVGl0bGUpIFZBTFVFUyAoXCIxXCIsXCJGcmVkXCIpOyc7XG4gKlxuICogdGhpcy5zcWxpdGVQb3J0ZXIuaW1wb3J0U3FsVG9EYihkYiwgc3FsKVxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnSW1wb3J0ZWQnKSlcbiAqICAgLmNhdGNoKGUgPT4gY29uc29sZS5lcnJvcihlKSk7XG4gKlxuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1NRTGl0ZVBvcnRlcicsXG4gIHBsdWdpbjogJ3VrLmNvLndvcmtpbmdlZGdlLmNvcmRvdmEucGx1Z2luLnNxbGl0ZXBvcnRlcicsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5zcWxpdGVQb3J0ZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2RwYTk5Yy9jb3Jkb3ZhLXNxbGl0ZS1wb3J0ZXInLFxuICBwbGF0Zm9ybXM6IFsnQW1hem9uIEZpcmUgT1MnLCAnQW5kcm9pZCcsICdCbGFja0JlcnJ5IDEwJywgJ0Jyb3dzZXInLCAnaU9TJywgJ1RpemVuJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTUUxpdGVQb3J0ZXIgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBFeGVjdXRlcyBhIHNldCBvZiBTUUwgc3RhdGVtZW50cyBhZ2FpbnN0IHRoZSBkZWZpbmVkIGRhdGFiYXNlLiBDYW4gYmUgdXNlZCB0byBpbXBvcnQgZGF0YSBkZWZpbmVkIGluIHRoZSBTUUwgc3RhdGVtZW50cyBpbnRvIHRoZSBkYXRhYmFzZSwgYW5kIG1heSBhZGRpdGlvbmFsbHkgaW5jbHVkZSBjb21tYW5kcyB0byBjcmVhdGUgdGhlIHRhYmxlIHN0cnVjdHVyZS5cbiAgICpcbiAgICogQHBhcmFtIGRiIHtPYmplY3R9IERhdGFiYXNlIG9iamVjdFxuICAgKiBAcGFyYW0gc3FsIHtzdHJpbmd9IFNRTCBzdGF0ZW1lbnRzIHRvIGV4ZWN1dGUgYWdhaW5zdCB0aGUgZGF0YWJhc2VcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3NGbicsXG4gICAgZXJyb3JOYW1lOiAnZXJyb3JGbicsXG4gIH0pXG4gIGltcG9ydFNxbFRvRGIoZGI6IGFueSwgc3FsOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHBvcnRzIGEgU1FMaXRlIERCIGFzIGEgc2V0IG9mIFNRTCBzdGF0ZW1lbnRzLlxuICAgKlxuICAgKiBAcGFyYW0gZGIge09iamVjdH0gRGF0YWJhc2Ugb2JqZWN0XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzRm4nLFxuICAgIGVycm9yTmFtZTogJ2Vycm9yRm4nLFxuICB9KVxuICBleHBvcnREYlRvU3FsKGRiOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDb252ZXJ0cyB0YWJsZSBzdHJ1Y3R1cmUgYW5kL29yIHJvdyBkYXRhIGNvbnRhaW5lZCB3aXRoaW4gYSBKU09OIHN0cnVjdHVyZSBpbnRvIFNRTCBzdGF0ZW1lbnRzIHRoYXQgY2FuIGJlIGV4ZWN1dGVkIGFnYWluc3QgYSBTUUxpdGUgZGF0YWJhc2UuIENhbiBiZSB1c2VkIHRvIGltcG9ydCBkYXRhIGludG8gdGhlIGRhdGFiYXNlIGFuZC9vciBjcmVhdGUgdGhlIHRhYmxlIHN0cnVjdHVyZS5cbiAgICpcbiAgICogQHBhcmFtIGRiIHtPYmplY3R9IERhdGFiYXNlIG9iamVjdFxuICAgKiBAcGFyYW0ganNvbiB7T2JqZWN0fHN0cmluZ30gSlNPTiBzdHJ1Y3R1cmUgY29udGFpbmluZyByb3cgZGF0YSBhbmQvb3IgdGFibGUgc3RydWN0dXJlIGFzIGVpdGhlciBhIEpTT04gb2JqZWN0IG9yIHN0cmluZ1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrU3R5bGU6ICdvYmplY3QnLFxuICAgIHN1Y2Nlc3NOYW1lOiAnc3VjY2Vzc0ZuJyxcbiAgICBlcnJvck5hbWU6ICdlcnJvckZuJyxcbiAgfSlcbiAgaW1wb3J0SnNvblRvRGIoZGI6IGFueSwganNvbjogYW55KTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRXhwb3J0cyBhIFNRTGl0ZSBEQiBhcyBhIEpTT04gc3RydWN0dXJlXG4gICAqXG4gICAqIEBwYXJhbSBkYiB7T2JqZWN0fSBEYXRhYmFzZSBvYmplY3RcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnb2JqZWN0JyxcbiAgICBzdWNjZXNzTmFtZTogJ3N1Y2Nlc3NGbicsXG4gICAgZXJyb3JOYW1lOiAnZXJyb3JGbicsXG4gIH0pXG4gIGV4cG9ydERiVG9Kc29uKGRiOiBhbnkpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaXBlcyBhbGwgZGF0YSBmcm9tIGEgZGF0YWJhc2UgYnkgZHJvcHBpbmcgYWxsIGV4aXN0aW5nIHRhYmxlc1xuICAgKlxuICAgKiBAcGFyYW0gZGIge09iamVjdH0gRGF0YWJhc2Ugb2JqZWN0XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tTdHlsZTogJ29iamVjdCcsXG4gICAgc3VjY2Vzc05hbWU6ICdzdWNjZXNzRm4nLFxuICAgIGVycm9yTmFtZTogJ2Vycm9yRm4nLFxuICB9KVxuICB3aXBlRGIoZGI6IGFueSk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=